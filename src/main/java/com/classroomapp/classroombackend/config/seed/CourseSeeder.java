package com.classroomapp.classroombackend.config.seed;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.classroomapp.classroombackend.model.classroommanagement.Course;
import com.classroomapp.classroombackend.repository.classroommanagement.CourseRepository;

import lombok.RequiredArgsConstructor;

@Component
@RequiredArgsConstructor
public class CourseSeeder {

    @Autowired
    private CourseRepository courseRepository;

    public void seed() {
        try {
            System.out.println("üîç [CourseSeeder] Starting course seeding...");
            long count = courseRepository.count();
            System.out.println("üîç [CourseSeeder] Current course count: " + count);

            if (count == 0) {
                System.out.println("üîç [CourseSeeder] Creating courses...");

                Course math = new Course();
                math.setName("To√°n h·ªçc n√¢ng cao");
                math.setDescription("Nghi√™n c·ª©u to√†n di·ªán c√°c kh√°i ni·ªám to√°n h·ªçc v√† ·ª©ng d·ª•ng c·ªßa ch√∫ng.");
                courseRepository.save(math);
                System.out.println("‚úÖ [CourseSeeder] Created: " + math.getName());

                Course history = new Course();
                history.setName("L·ªãch s·ª≠ th·∫ø gi·ªõi");
                history.setDescription("Kh·∫£o s√°t c√°c s·ª± ki·ªán l·ªãch s·ª≠ quan tr·ªçng t·ª´ c√°c n·ªÅn vƒÉn minh c·ªï ƒë·∫°i ƒë·∫øn th·ªùi hi·ªán ƒë·∫°i.");
                courseRepository.save(history);
                System.out.println("‚úÖ [CourseSeeder] Created: " + history.getName());

                Course literature = new Course();
                literature.setName("VƒÉn h·ªçc Vi·ªát Nam");
                literature.setDescription("Kh√°m ph√° c√°c t√°c ph·∫©m vƒÉn h·ªçc Vi·ªát Nam qua c√°c th·ªùi k·ª≥ l·ªãch s·ª≠.");
                courseRepository.save(literature);
                System.out.println("‚úÖ [CourseSeeder] Created: " + literature.getName());

                Course english = new Course();
                english.setName("Ti·∫øng Anh giao ti·∫øp");
                english.setDescription("Ph√°t tri·ªÉn k·ªπ nƒÉng giao ti·∫øp ti·∫øng Anh trong m√¥i tr∆∞·ªùng qu·ªëc t·∫ø.");
                courseRepository.save(english);
                System.out.println("‚úÖ [CourseSeeder] Created: " + english.getName());

                Course cs = new Course();
                cs.setName("Khoa h·ªçc m√°y t√≠nh");
                cs.setDescription("C√°c kh√°i ni·ªám c∆° b·∫£n v·ªÅ khoa h·ªçc m√°y t√≠nh v√† l·∫≠p tr√¨nh.");
                courseRepository.save(cs);
                System.out.println("‚úÖ [CourseSeeder] Created: " + cs.getName());

                Course physics = new Course();
                physics.setName("V·∫≠t l√Ω ƒë·∫°i c∆∞∆°ng");
                physics.setDescription("Gi·ªõi thi·ªáu c√°c nguy√™n l√Ω c∆° b·∫£n c·ªßa v·∫≠t l√Ω.");
                courseRepository.save(physics);
                System.out.println("‚úÖ [CourseSeeder] Created: " + physics.getName());

                System.out.println("‚úÖ [CourseSeeder] Created 6 sample courses.");
            } else {
                System.out.println("‚ÑπÔ∏è [CourseSeeder] Courses already exist, skipping seeding.");
            }
        } catch (Exception e) {
            System.err.println("‚ùå [CourseSeeder] Error during seeding: " + e.getMessage());
            e.printStackTrace();
            throw e;
        }
    }
} 